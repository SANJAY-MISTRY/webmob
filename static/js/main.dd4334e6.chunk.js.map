{"version":3,"sources":["components/SignUp.js","components/UserList.js","routes/Index.js","App.js","reportWebVitals.js","index.js"],"names":["SignUp","props","history","useHistory","useState","value","error","message","name","setName","email","setEmail","password","setPassword","rePassword","setRePassword","style","border","width","padding","margin","borderRadius","className","fontFamily","fontWeight","color","height","type","placeholder","onChange","e","target","trim","length","onClick","isValid","returnValue","console","log","undefined","formValidation","JSON","stringify","username","axios","method","url","headers","data","then","response","localStorage","setItem","token","nav","getItem","push","catch","UserList","React","resdata","setResdata","useEffect","Ltoken","res","users","map","ele","index","class","src","profile_pic","alt","position","left","top","transform","CircularProgress","Index","path","component","exact","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dd4334e6.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport axios from \"axios\";\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst SignUp = (props) => {\r\n    const history = useHistory();\r\n    const [name, setName] = useState({\r\n        value: \"\",\r\n        error: false,\r\n        message: \"\",\r\n    });\r\n\r\n    const [email, setEmail] = useState({\r\n        value: \"\",\r\n        error: false,\r\n        message: \"\",\r\n    });\r\n\r\n    const [password, setPassword] = useState({\r\n        value: \"\",\r\n        error: false,\r\n        message: \"\",\r\n    });\r\n\r\n    const [rePassword, setRePassword] = useState({\r\n        value: \"\",\r\n        error: false,\r\n        message: \"\",\r\n    });\r\n\r\n    const formValidation = () => {\r\n        let returnValue = true;\r\n        console.log(name, email, password, rePassword);\r\n        if (name.value == \"\" || name.value == undefined) {\r\n            setName({\r\n                ...name,\r\n                error: true,\r\n                message: \"Required\",\r\n            });\r\n            returnValue = false;\r\n        }\r\n        if (email.value == \"\" || email.value == undefined) {\r\n            setEmail({\r\n                ...email,\r\n                error: true,\r\n                message: \"Required\"\r\n            })\r\n        }\r\n        if (password.value == \"\" || password.value == undefined) {\r\n            setPassword({\r\n                ...password,\r\n                error: true,\r\n                message: \"Required\"\r\n            })\r\n        }\r\n        if (rePassword.value == \"\" || rePassword.value == undefined) {\r\n            setRePassword({\r\n                ...rePassword,\r\n                error: true,\r\n                message: \"Required\"\r\n            })\r\n        }\r\n\r\n        if (\r\n            name.error ||\r\n            email.error ||\r\n            password.error ||\r\n            rePassword.error\r\n        ) {\r\n            returnValue = false;\r\n        }\r\n        return returnValue;\r\n    }\r\n\r\n    const submitHandler = () => {\r\n        const isValid = formValidation();\r\n        console.log(isValid);\r\n        console.log(JSON.stringify({\r\n            username: name.value,\r\n            email: email.value,\r\n            password: password.value\r\n        }));\r\n        axios({\r\n            method: 'post',\r\n            url: 'http://68.183.48.101:3333/users/register',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            data: JSON.stringify({\r\n                username: name.value,\r\n                email: email.value,\r\n                password: password.value\r\n            })\r\n        }).then(function (response) {\r\n            console.log(response);\r\n            localStorage.setItem('accessToken', response.data.data.token.token)\r\n          })\r\n          .then(function (nav) {\r\n            let token = localStorage.getItem(\"accessToken\");\r\n            if(token){\r\n                history.push('/user-list')\r\n            }\r\n          })\r\n          .catch(function (error) {\r\n            console.log(error);\r\n          });\r\n    }\r\n\r\n    return (\r\n        <div style={{border:'1px solid orange', width:'300px', padding:\"20px\", margin:'20px auto', borderRadius:'20px'}}>\r\n            <div>\r\n            <h2 className=\"text-center\" style={{fontFamily:'cursive', fontWeight:'bold', color:'#ffc107'}}> SIGN UP</h2>\r\n            </div>\r\n            <hr style={{color:\"orange\", height:'1px', fontFamily:\"cursive\"}}></hr>\r\n                <div>\r\n                <div className=\"form-group py-2\">\r\n                    <label>Username</label>\r\n                    <input type=\"text\" className=\"form-control\" placeholder=\"Username\" \r\n                    value={name.value}\r\n                        onChange={(e) => {\r\n                            if (e.target.value.trim().length > 0) {\r\n                                setName({\r\n                                    ...name,\r\n                                    error: false,\r\n                                    value: e.target.value,\r\n                                });\r\n                            } else {\r\n                                setName({\r\n                                    ...name,\r\n                                    error: true,\r\n                                    value: e.target.value,\r\n                                    message: \"First Name is required feild\",\r\n                                });\r\n                            }\r\n                        }} />\r\n                </div>\r\n                <div className=\"form-group py-2\">\r\n                    <label>Email address</label>\r\n                    <input type='email'\r\n                        className=\"form-control\"\r\n                        placeholder=\"Email\"\r\n                        value={email.value}\r\n                        onChange={(e) => {\r\n                            if (e.target.value.trim().length > 0) {\r\n                                setEmail({\r\n                                    ...email,\r\n                                    error: false,\r\n                                    value: e.target.value,\r\n                                });\r\n                            } else {\r\n                                setEmail({\r\n                                    ...email,\r\n                                    error: true,\r\n                                    value: e.target.value,\r\n                                    message: \"email is required feild\",\r\n                                });\r\n                            }\r\n                        }} />\r\n                    {email.error && (\r\n                        <p>{email.message}</p>\r\n                    )}\r\n                </div>\r\n                <div className=\"form-group py-2\">\r\n                    <label>Password</label>\r\n                    <input\r\n                        type='password'\r\n                        placeholder=\"Password\"\r\n                        className=\"form-control\"\r\n                        value={password.value}\r\n                        onChange={(e) => {\r\n                            if (e.target.value.trim().length > 0) {\r\n                                setPassword({\r\n                                    ...password,\r\n                                    error: false,\r\n                                    value: e.target.value,\r\n                                });\r\n                            } else {\r\n                                setPassword({\r\n                                    ...password,\r\n                                    error: true,\r\n                                    value: e.target.value,\r\n                                    message: \"Password is required feild\",\r\n                                });\r\n                            }\r\n                        }} />\r\n                    {password.error && (\r\n                        <p>{password.message}</p>\r\n                    )}\r\n                </div>\r\n                <div className=\"form-group py-2\">\r\n                    <label>Confirm-password</label>\r\n                    <input\r\n                        type='password'\r\n                        placeholder=\"Confirm-password\"\r\n                        className=\"form-control\"\r\n                        value={rePassword.value}\r\n                        onChange={(e) => {\r\n                            let error = false;\r\n                            let message = \"\";\r\n                            if (e.target.value.trim().length == 0) {\r\n                                error = true;\r\n                                message = \"Confirm password is required field\";\r\n                            } else if (e.target.value !== password.value) {\r\n                                error = true;\r\n                                message = \"Password and Confirm Password should match\";\r\n                            }\r\n                            setRePassword({\r\n                                ...rePassword,\r\n                                error: error,\r\n                                value: e.target.value,\r\n                                message: message,\r\n                            });\r\n                        }} />\r\n                    {rePassword.error && (\r\n                        <p>{rePassword.message}</p>\r\n                    )}\r\n                </div>\r\n                </div>\r\n                {/* <div>\r\n                    <label>Email</label><br />\r\n                    <input type='email'\r\n                        placeholder=\"Email\"\r\n                        value={email.value}\r\n                        onChange={(e) => {\r\n                            if (e.target.value.trim().length > 0) {\r\n                                setEmail({\r\n                                    ...email,\r\n                                    error: false,\r\n                                    value: e.target.value,\r\n                                });\r\n                            } else {\r\n                                setEmail({\r\n                                    ...email,\r\n                                    error: true,\r\n                                    value: e.target.value,\r\n                                    message: \"email is required feild\",\r\n                                });\r\n                            }\r\n                        }} />\r\n                    {email.error && (\r\n                        <p>{email.message}</p>\r\n                    )}\r\n                </div> */}\r\n                {/* <div>\r\n                    <label>Password</label><br />\r\n                    <input\r\n                        type='password'\r\n                        placeholder=\"Password\"\r\n                        className=\"form-control\"\r\n                        value={password.value}\r\n                        onChange={(e) => {\r\n                            if (e.target.value.trim().length > 0) {\r\n                                setPassword({\r\n                                    ...password,\r\n                                    error: false,\r\n                                    value: e.target.value,\r\n                                });\r\n                            } else {\r\n                                setPassword({\r\n                                    ...password,\r\n                                    error: true,\r\n                                    value: e.target.value,\r\n                                    message: \"Password is required feild\",\r\n                                });\r\n                            }\r\n                        }} />\r\n                    {password.error && (\r\n                        <p>{password.message}</p>\r\n                    )}\r\n                </div> */}\r\n                {/* <div>\r\n                    <label>Re enter password</label><br />\r\n                    <input\r\n                        type='password'\r\n                        placeholder=\"Re enter password\"\r\n                        value={rePassword.value}\r\n                        onChange={(e) => {\r\n                            let error = false;\r\n                            let message = \"\";\r\n                            if (e.target.value.trim().length == 0) {\r\n                                error = true;\r\n                                message = \"Confirm password is required field\";\r\n                            } else if (e.target.value !== password.value) {\r\n                                error = true;\r\n                                message = \"Password and Confirm Password should match\";\r\n                            }\r\n                            setRePassword({\r\n                                ...rePassword,\r\n                                error: error,\r\n                                value: e.target.value,\r\n                                message: message,\r\n                            });\r\n                        }} />\r\n                    {rePassword.error && (\r\n                        <p>{rePassword.message}</p>\r\n                    )}\r\n                </div> */}\r\n                <button className=\"btn btn-outline-warning w-100 mt-3\" onClick={submitHandler} >Sign Up</button>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SignUp;","import React, {useEffect, useState} from 'react';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport axios from \"axios\";\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\n\r\nconst UserList = () => {\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n    const [resdata, setResdata] = useState('');\r\n    // const classes = useStyles();\r\n        useEffect(() => {\r\n            const Ltoken = localStorage.getItem(\"accessToken\");\r\n            axios({\r\n                method: 'get',\r\n                url: 'http://68.183.48.101:3333/users/list',\r\n                headers: {\r\n                    'Authorization': `Bearer ${Ltoken}`\r\n                },\r\n            }).then(function (res) {\r\n                setResdata(res.data.data.users)\r\n                console.log(\"wwwwwwwwwwww\",res.data.data);\r\n              })\r\n              .catch(function (error) {\r\n                console.log(error);\r\n              });\r\n        }, [resdata]);\r\n        // const handleChangePage = (event, newPage) => {\r\n        //     if(page<newPage && (documentState.list.length < (newPage+1)*5) && !(documentState.list.length == documentState.rows)){\r\n        //         dispatch(documentActions.fetchDocumentsTobeApproved(newPage));\r\n        //     }\r\n        //     setPage(newPage);\r\n        // };\r\n    \r\n        // const handleChangeRowsPerPage = (event) => {\r\n        //     setRowsPerPage(+event.target.value);\r\n        //     setPage(0);\r\n        // };\r\n    return (\r\n        <div className=\"container\">\r\n        <h1 className=\"text-center\">User List</h1>\r\n\r\n        <div className=\"row\">\r\n        \r\n\r\n        \r\n\r\n{resdata && resdata.length > 0 ? (\r\n    resdata.map((ele, index) => {\r\n    return(\r\n        \r\n        \r\n        <div key={index} class=\"card col-lg-3 col-sm-6 my-3 p-3\" >\r\n        <img class=\"card-img-top\" src={ele.profile_pic} alt=\"Card image cap\" />\r\n        <div class=\"card-body\">\r\n            <h5 class=\"card-title\">User Name: {ele.username}</h5>\r\n            <p class=\"card-text\">Email: {ele.email} </p>\r\n        </div>\r\n        </div>\r\n    )\r\n})\r\n): <div><p style={{ position: 'absolute', left: '50%', top: '50%', transform: 'translate(-50%, -50%)' }}><CircularProgress /></p></div>}\r\n\r\n\r\n            </div>\r\n            {/* <div>\r\n                <button onClick={minusPage}>minus</button>\r\n                <button>Plus</button>\r\n            </div> */}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UserList;","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport SignUp from '../components/SignUp';\r\nimport UserList from '../components/UserList';\r\n\r\nfunction Index(props) {\r\n    return (\r\n        <Router>\r\n            <Switch>\r\n                <Route path ='/' component={SignUp} exact/>                \r\n                <Route path ='/user-list' component={UserList} exact/>                \r\n            </Switch>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default Index;","import './App.css';\r\nimport Index from './routes/Index';\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n     <Index/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}